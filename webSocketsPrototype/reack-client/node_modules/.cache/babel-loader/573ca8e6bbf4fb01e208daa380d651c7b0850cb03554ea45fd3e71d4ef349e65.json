{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\Programming\\\\demoProjects\\\\findingEnemy\\\\reack-client\\\\src\\\\components\\\\SearchingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst SearchingPage = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(false);\n  const connectToServer = () => {\n    let Sock = new SockJS('http://localhost:8082/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected);\n  };\n  const onConnected = () => {\n    setIsConnected(true);\n    stompClient.subscribe('/user/' + userName + '/private', onMessageReceived);\n    stompClient.send('/app/findEnemy', {}, JSON.stringify(userName));\n  };\n  const onMessageReceived = msg => {\n    // console.log('Your name is' + JSON.parse(msg.body));\n    console.log(\"RECEIVED MESSAGE!!!!!\");\n  };\n  const startSearching = () => {\n    connectToServer();\n    console.log(\"HELLO\");\n  };\n  const updateUserName = event => {\n    const value = event.target.value;\n    setUserName(value);\n    console.log(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"connect to search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startSearching,\n      children: \"search for opponent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 51\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isConnected ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"enter user name\",\n          value: userName,\n          name: \"username\",\n          onChange: updateUserName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          children: \"connect to server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchingPage, \"PJ5H83HAHMiaBtykdNkB4NKGmSI=\");\n_c = SearchingPage;\nexport default SearchingPage;\nvar _c;\n$RefreshReg$(_c, \"SearchingPage\");","map":{"version":3,"names":["React","useState","SockJS","over","jsxDEV","_jsxDEV","stompClient","SearchingPage","_s","userName","setUserName","isConnected","setIsConnected","connectToServer","Sock","connect","onConnected","subscribe","onMessageReceived","send","JSON","stringify","msg","console","log","startSearching","updateUserName","event","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","placeholder","name","onChange","_c","$RefreshReg$"],"sources":["D:/Program Files/Programming/demoProjects/findingEnemy/reack-client/src/components/SearchingPage.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport {over} from 'stompjs';\r\n\r\ninterface message {\r\n  receiver:string;\r\n  sender:string;\r\n  message:string;\r\n}\r\n\r\n\r\n\r\nvar stompClient: any = null;\r\nconst SearchingPage = () => {\r\n    const [userName, setUserName] = useState<string>(\"\");\r\n    const [isConnected, setIsConnected] = useState<boolean>(false);\r\n  const connectToServer= () => {\r\n    let Sock=new SockJS('http://localhost:8082/ws');\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected);\r\n\r\n  }\r\n  const onConnected = () => {\r\n    setIsConnected(true);\r\n    stompClient.subscribe('/user/' + userName + '/private', onMessageReceived);\r\n    stompClient.send('/app/findEnemy', {}, JSON.stringify(userName));\r\n\r\n  }\r\n\r\n  const onMessageReceived = (msg: any) => {\r\n    // console.log('Your name is' + JSON.parse(msg.body));\r\n    console.log(\"RECEIVED MESSAGE!!!!!\");\r\n\r\n  }\r\n\r\n\r\n  const startSearching = () => {\r\n\r\n    connectToServer();\r\n    console.log(\"HELLO\");\r\n  }\r\n\r\n  const updateUserName = (event: any) => {\r\n    const value = event.target.value;\r\n    setUserName(value);\r\n    console.log(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isConnected? <div>connect to search</div>: <button onClick={startSearching}>search for opponent</button>}\r\n      <div>\r\n        {isConnected? <p>{userName}</p> :\r\n        <div>\r\n         <input id='user-name' placeholder='enter user name' value={userName} name='username' onChange={updateUserName}/>\r\n         <button onClick={connect}>connect to server</button>\r\n        </div>\r\n        }\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchingPage\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}