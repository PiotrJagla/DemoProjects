{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\webSocketsPrototype\\\\reack-client\\\\src\\\\components\\\\GamePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst GamePage = _ref => {\n  _s();\n  let {\n    userName,\n    gameID,\n    serverURL\n  } = _ref;\n  const [points, setPoints] = useState(0);\n  const [enemyPoints, setEnemyPoints] = useState(0);\n  useEffect(() => {\n    //Initialize\n    connectToServer();\n  }, []);\n  const connectToServer = () => {\n    let Sock = new SockJS(serverURL + '/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected);\n  };\n  const onConnected = () => {\n    stompClient.subscribe('/user/' + userName + '/game', onTriggerRecieved);\n  };\n  const onTriggerRecieved = payload => {\n    let enemyName = payload.body.split(\":\")[1];\n    fetch(serverURL + `/button/getPoints/${enemyName}/${gameID}`).then(res => res.json()).then(data => {\n      setEnemyPoints(data);\n    }).catch(console.error);\n  };\n  const increase = () => {\n    let message = userName + \":\" + gameID;\n    fetch(serverURL + '/button', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/plain'\n      },\n      body: message\n    });\n    fetch(serverURL + `/button/getPoints/${userName}/${gameID}`).then(res => res.json()).then(data => {\n      setPoints(data);\n    }).catch(console.error);\n    stompClient.send('/app/sendTrigger', {}, userName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increase,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You points: \", points]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Enemy points: \", enemyPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"k2DJSkZ9rwfzGfLNkDVu5+Dip68=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","over","SockJS","jsxDEV","_jsxDEV","stompClient","GamePage","_ref","_s","userName","gameID","serverURL","points","setPoints","enemyPoints","setEnemyPoints","connectToServer","Sock","connect","onConnected","subscribe","onTriggerRecieved","payload","enemyName","body","split","fetch","then","res","json","data","catch","console","error","increase","message","method","headers","send","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/webSocketsPrototype/reack-client/src/components/GamePage.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {over} from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\ninterface UserNameProps {\r\n    userName: string;\r\n    gameID: string;\r\n    serverURL: string;\r\n}\r\nvar stompClient: any = null;\r\nconst GamePage: React.FC<UserNameProps> = ({userName, gameID, serverURL}) => {\r\n\r\n    const [points, setPoints] = useState<number>(0);\r\n    const [enemyPoints, setEnemyPoints] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        //Initialize\r\n        connectToServer();\r\n\r\n    }, []);\r\n\r\n  const connectToServer= () => {\r\n    let Sock=new SockJS(serverURL + '/ws');\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected);\r\n\r\n  }\r\n  const onConnected = () => {\r\n    stompClient.subscribe('/user/' + userName + '/game', onTriggerRecieved);\r\n  }\r\n  const onTriggerRecieved = (payload: any) => {\r\n      let enemyName = payload.body.split(\":\")[1]; \r\n      fetch(serverURL + `/button/getPoints/${enemyName}/${gameID}`)\r\n      .then((res) => res.json())\r\n      .then((data:number ) => {\r\n        setEnemyPoints(data);\r\n      }).catch(console.error);\r\n\r\n  }\r\n\r\n  const increase = () => {\r\n\r\n      let message:string = userName + \":\" + gameID;\r\n      fetch(serverURL + '/button', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'text/plain',},\r\n        body: message,\r\n      });\r\n      fetch(serverURL + `/button/getPoints/${userName}/${gameID}`)\r\n      .then((res) => res.json())\r\n      .then((data:number ) => {\r\n        setPoints(data);\r\n      }).catch(console.error);\r\n      stompClient.send('/app/sendTrigger', {}, userName);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div>{userName}</div>\r\n        <button onClick={increase}>Click</button>\r\n        <p>You points: {points}</p>\r\n        <p>Enemy points: {enemyPoints}</p>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GamePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}