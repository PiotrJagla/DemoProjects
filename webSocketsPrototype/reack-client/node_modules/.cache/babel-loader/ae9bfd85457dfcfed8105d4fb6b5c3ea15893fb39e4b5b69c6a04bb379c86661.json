{"ast":null,"code":"const counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n    case 'DECREMENT':\n      return state - 1;\n    default:\n      return state;\n  }\n};\nexport default counterReducer;","map":{"version":3,"names":["counterReducer","state","arguments","length","undefined","action","type"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/webSocketsPrototype/reack-client/src/components/reducers/counter.ts"],"sourcesContent":["const counterReducer = (state:number = 0, action:any ) => {\r\n    switch(action.type) {\r\n        case 'INCREMENT':\r\n            return state + 1;\r\n        case 'DECREMENT':\r\n            return state - 1;\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n};\r\nexport default counterReducer;"],"mappings":"AAAA,MAAMA,cAAc,GAAG,SAAAA,CAAA,EAAmC;EAAA,IAAlCC,KAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEG,MAAU,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,WAAW;MACZ,OAAOL,KAAK,GAAG,CAAC;IACpB,KAAK,WAAW;MACZ,OAAOA,KAAK,GAAG,CAAC;IACpB;MACI,OAAOA,KAAK;EAEpB;AAEJ,CAAC;AACD,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}