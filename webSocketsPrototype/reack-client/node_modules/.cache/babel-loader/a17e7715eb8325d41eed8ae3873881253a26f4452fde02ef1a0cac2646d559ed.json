{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\webSocketsPrototype\\\\reack-client\\\\src\\\\components\\\\SearchingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar serverURL = 'http://localhost:8082';\nvar stompClient = null;\nvar gameID = \"\";\nconst SearchingPage = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(false);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const connectToServer = () => {\n    dispatch({\n      type: \"CHANGE_NAME\",\n      payload: userName\n    });\n    dispatch({\n      type: \"SET_SERVER_URL\",\n      payload: serverURL\n    });\n    let Sock = new SockJS(serverURL + '/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected);\n  };\n  const onConnected = () => {\n    setIsConnected(true);\n    stompClient.subscribe('/user/' + userName + '/private', onMessageReceived);\n  };\n  const onMessageReceived = payload => {\n    if (payload.body.includes(\"Found enemy\")) {\n      gameID = payload.body.split(\":\")[1];\n      dispatch({\n        type: \"SET_GAME_ID\",\n        payload: gameID\n      });\n      let message = userName + \":\" + gameID;\n      fetch(serverURL + '/button', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: message\n      });\n      navigate(\"/game\");\n    }\n  };\n  const startSearching = () => {\n    stompClient.send('/app/findEnemy', {}, userName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"connect to search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSearching,\n        children: \"search for opponent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"user-name\",\n            placeholder: \"enter user name\",\n            value: userName,\n            name: \"username\",\n            onChange: event => {\n              setUserName(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connectToServer,\n            children: \"connect to server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchingPage, \"uolV5SKdlhlvupnDa6h2bRZoxRM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = SearchingPage;\nexport default SearchingPage;\nvar _c;\n$RefreshReg$(_c, \"SearchingPage\");","map":{"version":3,"names":["React","useState","SockJS","over","useDispatch","useNavigate","jsxDEV","_jsxDEV","serverURL","stompClient","gameID","SearchingPage","_s","userName","setUserName","isConnected","setIsConnected","dispatch","navigate","connectToServer","type","payload","Sock","connect","onConnected","subscribe","onMessageReceived","body","includes","split","message","fetch","method","headers","startSearching","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","placeholder","value","name","onChange","event","target","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/webSocketsPrototype/reack-client/src/components/SearchingPage.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport {over} from 'stompjs';\r\nimport GamePage from './GamePage';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\ninterface message {\r\n  receiver:string;\r\n  sender:string;\r\n  message:string;\r\n}\r\n\r\n\r\nvar serverURL: string = 'http://localhost:8082';\r\nvar stompClient: any = null;\r\nvar gameID:string= \"\";\r\nconst SearchingPage = () => {\r\n    const [userName, setUserName] = useState<string>(\"\");\r\n    const [isConnected, setIsConnected] = useState<boolean>(false);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let navigate = useNavigate();\r\n\r\n\r\n  const connectToServer= () => {\r\n    dispatch({type:\"CHANGE_NAME\", payload: userName});\r\n    dispatch({type:\"SET_SERVER_URL\", payload: serverURL});\r\n    let Sock=new SockJS(serverURL + '/ws');\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected);\r\n\r\n  }\r\n  const onConnected = () => {\r\n    setIsConnected(true);\r\n    stompClient.subscribe('/user/' + userName + '/private', onMessageReceived);\r\n\r\n  }\r\n\r\n  const onMessageReceived = (payload:any) => {\r\n\r\n    if(payload.body.includes(\"Found enemy\") ) {\r\n\r\n      gameID = payload.body.split(\":\")[1]; \r\n      dispatch({type:\"SET_GAME_ID\", payload: gameID});\r\n      let message:string = userName + \":\" + gameID;\r\n      fetch(serverURL + '/button', {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'text/plain',},\r\n        body: message,\r\n      });\r\n      navigate(\"/game\");\r\n    }\r\n  }\r\n\r\n\r\n  const startSearching = () => {\r\n    stompClient.send('/app/findEnemy', {}, userName);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n      {!isConnected? <div>connect to search</div>: <button onClick={startSearching}>search for opponent</button>}\r\n      <div>\r\n        {isConnected? <div> </div>:\r\n        <div>\r\n         <input id='user-name' placeholder='enter user name' value={userName} name='username' onChange={(event:any) => {setUserName(event.target.value)}}/>\r\n         <button onClick={connectToServer}>connect to server</button>\r\n        </div>\r\n        }\r\n      </div>\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchingPage\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}