{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\Programming\\\\demoProjects\\\\findingEnemy\\\\reack-client\\\\src\\\\components\\\\SearchingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar serverURL = 'http://localhost:8082';\nvar stompClient = null;\nconst SearchingPage = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(false);\n  const [isEnemyFound, setIsEnemyFound] = useState(false);\n  const [points, setPoints] = useState(0);\n  const connectToServer = () => {\n    let Sock = new SockJS(serverURL + '/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected);\n  };\n  const onConnected = () => {\n    setIsConnected(true);\n    stompClient.subscribe('/user/' + userName + '/private', onMessageReceived);\n  };\n  const onMessageReceived = payload => {\n    console.log('Your name is: ' + payload.body);\n    if (payload.body === \"Found enemy\") {\n      setIsEnemyFound(true);\n      fetch(serverURL + '/button', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userName)\n      });\n    }\n  };\n  const startSearching = () => {\n    stompClient.send('/app/findEnemy', {}, userName);\n  };\n  const connect = () => {\n    connectToServer();\n  };\n  const increase = () => {\n    fetch(serverURL + '/button', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userName)\n    });\n    fetch(serverURL + `/getPoints/${userName}`).then(res => res.json()).then(data => {\n      setPoints(data);\n    }).catch(console.error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"connect to search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startSearching,\n      children: \"search for opponent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isConnected ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"enter user name\",\n          value: userName,\n          name: \"username\",\n          onChange: event => {\n            setUserName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          children: \"connect to server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isEnemyFound ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increase,\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchingPage, \"bwoepg5TXjLxfyYyDdwfT+m82pE=\");\n_c = SearchingPage;\nexport default SearchingPage;\nvar _c;\n$RefreshReg$(_c, \"SearchingPage\");","map":{"version":3,"names":["React","useState","SockJS","over","jsxDEV","_jsxDEV","serverURL","stompClient","SearchingPage","_s","userName","setUserName","isConnected","setIsConnected","isEnemyFound","setIsEnemyFound","points","setPoints","connectToServer","Sock","connect","onConnected","subscribe","onMessageReceived","payload","console","log","body","fetch","method","headers","JSON","stringify","startSearching","send","increase","then","res","json","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","placeholder","value","name","onChange","event","target","_c","$RefreshReg$"],"sources":["D:/Program Files/Programming/demoProjects/findingEnemy/reack-client/src/components/SearchingPage.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport {over} from 'stompjs';\r\n\r\ninterface message {\r\n  receiver:string;\r\n  sender:string;\r\n  message:string;\r\n}\r\n\r\n\r\nvar serverURL: string = 'http://localhost:8082';\r\nvar stompClient: any = null;\r\nconst SearchingPage = () => {\r\n    const [userName, setUserName] = useState<string>(\"\");\r\n    const [isConnected, setIsConnected] = useState<boolean>(false);\r\n    const [isEnemyFound, setIsEnemyFound] = useState<boolean>(false);\r\n    const [points, setPoints] = useState<number>(0);\r\n  const connectToServer= () => {\r\n    let Sock=new SockJS(serverURL + '/ws');\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected);\r\n\r\n  }\r\n  const onConnected = () => {\r\n    setIsConnected(true);\r\n    stompClient.subscribe('/user/' + userName + '/private', onMessageReceived);\r\n\r\n  }\r\n\r\n  const onMessageReceived = (payload:any) => {\r\n    console.log('Your name is: ' + payload.body);\r\n\r\n    if(payload.body === \"Found enemy\") {\r\n\r\n      setIsEnemyFound(true);\r\n      fetch(serverURL + '/button', {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json',},\r\n        body: JSON.stringify(userName),\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  const startSearching = () => {\r\n    stompClient.send('/app/findEnemy', {}, userName);\r\n  }\r\n  const connect = () => {\r\n    connectToServer();\r\n  }\r\n\r\n  const increase = () => {\r\n\r\n      fetch(serverURL + '/button', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json',},\r\n        body: JSON.stringify(userName),\r\n      });\r\n      fetch(serverURL + `/getPoints/${userName}`)\r\n      .then((res) => res.json())\r\n      .then((data:number ) => {\r\n        setPoints(data);\r\n      }).catch(console.error);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!isConnected? <div>connect to search</div>: <button onClick={startSearching}>search for opponent</button>}\r\n      <div>\r\n        {isConnected? <p>{userName}</p> :\r\n        <div>\r\n         <input id='user-name' placeholder='enter user name' value={userName} name='username' onChange={(event:any) => {setUserName(event.target.value)}}/>\r\n         <button onClick={connect}>connect to server</button>\r\n        </div>\r\n        }\r\n      </div>\r\n      {isEnemyFound?\r\n      <div>\r\n        <button onClick={increase}>Click</button>\r\n\r\n      </div>\r\n      :\r\n      <div>\r\n\r\n      </div>\r\n      }\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchingPage\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}