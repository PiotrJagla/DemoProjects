{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\webSocketsPrototype\\\\reack-client\\\\src\\\\components\\\\GamePage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = _ref => {\n  _s();\n  let {\n    userName,\n    stompClient,\n    gameID\n  } = _ref;\n  const [points, setPoints] = useState(0);\n  const [enemyPoints, setEnemyPoints] = useState(0);\n  const increase = () => {\n    let message = userName + \":\" + gameID;\n    fetch(serverURL + '/button', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/plain'\n      },\n      body: message\n    });\n    fetch(serverURL + `/button/getPoints/${userName}/${gameID}`).then(res => res.json()).then(data => {\n      setPoints(data);\n    }).catch(console.error);\n    stompClient.send('/app/sendToEnemy', {}, userName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increase,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You points: \", points]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Enemy points: \", enemyPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"W7cWX2XFsusz/KqC672N5c6oRGU=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GamePage","_ref","_s","userName","stompClient","gameID","points","setPoints","useState","enemyPoints","setEnemyPoints","increase","message","fetch","serverURL","method","headers","body","then","res","json","data","catch","console","error","send","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/webSocketsPrototype/reack-client/src/components/GamePage.tsx"],"sourcesContent":["import React from 'react'\r\n\r\n\r\ninterface UserNameProps {\r\n    userName: string;\r\n    stompClient: any;\r\n    gameID: string;\r\n}\r\n\r\nconst GamePage: React.FC<UserNameProps> = ({userName, stompClient, gameID}) => {\r\n\r\n    const [points, setPoints] = useState<number>(0);\r\n    const [enemyPoints, setEnemyPoints] = useState<number>(0);\r\n\r\n  const increase = () => {\r\n\r\n      let message:string = userName + \":\" + gameID;\r\n      fetch(serverURL + '/button', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'text/plain',},\r\n        body: message,\r\n      });\r\n      fetch(serverURL + `/button/getPoints/${userName}/${gameID}`)\r\n      .then((res) => res.json())\r\n      .then((data:number ) => {\r\n        setPoints(data);\r\n      }).catch(console.error);\r\n      stompClient.send('/app/sendToEnemy', {}, userName);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div>{userName}</div>\r\n        <button onClick={increase}>Click</button>\r\n        <p>You points: {points}</p>\r\n        <p>Enemy points: {enemyPoints}</p>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GamePage"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASzB,MAAMC,QAAiC,GAAGC,IAAA,IAAqC;EAAAC,EAAA;EAAA,IAApC;IAACC,QAAQ;IAAEC,WAAW;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EAEtE,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAS,CAAC,CAAC;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGF,QAAQ,CAAS,CAAC,CAAC;EAE3D,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IAEnB,IAAIC,OAAc,GAAGT,QAAQ,GAAG,GAAG,GAAGE,MAAM;IAC5CQ,KAAK,CAACC,SAAS,GAAG,SAAS,EAAE;MAC3BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAa,CAAC;MACxCC,IAAI,EAAEL;IACR,CAAC,CAAC;IACFC,KAAK,CAACC,SAAS,GAAI,qBAAoBX,QAAS,IAAGE,MAAO,EAAC,CAAC,CAC3Da,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAW,IAAM;MACtBd,SAAS,CAACc,IAAI,CAAC;IACjB,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACvBpB,WAAW,CAACqB,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAEtB,QAAQ,CAAC;EAEtD,CAAC;EAGD,oBACEJ,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAMvB;IAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrB/B,OAAA;MAAQgC,OAAO,EAAEpB,QAAS;MAAAe,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzC/B,OAAA;MAAA2B,QAAA,GAAG,cAAY,EAACpB,MAAM;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B/B,OAAA;MAAA2B,QAAA,GAAG,gBAAc,EAACjB,WAAW;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjC,CAAC;AAEV,CAAC;AAAA5B,EAAA,CAhCKF,QAAiC;AAAAgC,EAAA,GAAjChC,QAAiC;AAkCvC,eAAeA,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}